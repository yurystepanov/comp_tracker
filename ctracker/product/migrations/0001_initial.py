# Generated by Django 4.1.5 on 2023-03-29 10:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100)),
                ('image', models.ImageField(blank=True, upload_to='images/brands/')),
            ],
            options={
                'verbose_name': 'brand',
                'verbose_name_plural': 'brands',
                'db_table': 'product_brand',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100)),
                ('order', models.IntegerField(blank=True, default=0)),
                ('image', models.ImageField(blank=True, upload_to='images/groups/')),
                ('imageURL', models.URLField(blank=True)),
            ],
            options={
                'verbose_name': 'product group',
                'verbose_name_plural': 'product groups',
                'db_table': 'product_group',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SpecificationGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('order', models.IntegerField(blank=True, default=0)),
            ],
            options={
                'verbose_name': 'specification group',
                'verbose_name_plural': 'specification groups',
                'db_table': 'specification_group',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('order', models.IntegerField(blank=True, default=0)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.specificationgroup')),
            ],
            options={
                'verbose_name': 'specification',
                'verbose_name_plural': 'specifications',
                'db_table': 'specification',
                'ordering': ['order'],
                'unique_together': {('group', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100)),
                ('description_short', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='images/products/')),
                ('imageURL', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='produces', to='product.brand')),
                ('favourites', models.ManyToManyField(blank=True, db_table='product_favourites', related_name='favourite_products', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='product.productgroup')),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
                'db_table': 'product',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SpecificationValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=200)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specifications', to='product.product')),
                ('specification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.specification')),
            ],
            options={
                'verbose_name': 'specification value',
                'verbose_name_plural': 'specification values',
                'db_table': 'specification_value',
                'unique_together': {('product', 'specification')},
            },
        ),
        migrations.CreateModel(
            name='ProductFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True, default=0)),
                ('filter_name', models.CharField(max_length=20)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.productgroup')),
                ('specification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filtering', to='product.specification')),
            ],
            options={
                'verbose_name': 'filter',
                'verbose_name_plural': 'filters',
                'db_table': 'product_filter',
                'ordering': ['group', 'order'],
                'unique_together': {('group', 'specification')},
            },
        ),
    ]

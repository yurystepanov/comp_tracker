services:

  db:
    image: postgres:15.2
    restart: always
    volumes:
      - postgres_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB={{ env.POSTGRES_DB }}
      - POSTGRES_USER={{ env.POSTGRES_USER }}
      - POSTGRES_PASSWORD={{ env.POSTGRES_PASSWORD }}

  web:
    image: {{ env.IMAGE_URL }}
    command: [ "./wait-for-it.sh", "db:5432", "--",
               "/bin/sh", "/code/pre-launch-operations.sh"]
    restart: always
    volumes:
      - nginx:/code/data/nginx
      - ctracker_static:/code/ctracker/static
      - ctracker_media:/code/ctracker/media
    environment:
      - DJANGO_SETTINGS_MODULE=ctracker.settings.prod
      - POSTGRES_DB={{ env.POSTGRES_DB }}
      - POSTGRES_USER={{ env.POSTGRES_USER }}
      - POSTGRES_PASSWORD={{ env.POSTGRES_PASSWORD }}
      - DJANGO_SECRET_KEY= {{ env.DJANGO_SECRET_KEY }}
    depends_on:
      - db

  nginx:
    image: nginx:1.23.4
    restart: always
    volumes:
      - nginx:/etc/nginx/templates
      - ctracker_static:/static
      - ctracker_media:/media
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
      - ystep_root:/ystep
    ports:
      - "80:80"
      - "443:443"

  certbot:
    image: certbot/certbot
    volumes:
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot

volumes:
  nginx:
  postgres_db:
  ctracker_static:
  ctracker_media:
  certbot_conf:
  certbot_www:

